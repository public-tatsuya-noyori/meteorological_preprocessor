export HOME=/tmp
cd $HOME
curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
unzip -o awscliv2.zip
rm -rf $HOME/aws-cli
./aws/install -i $HOME/aws-cli -b $HOME/aws-cli/bin
curl https://downloads.rclone.org/rclone-current-linux-amd64.zip -o rclone.zip
mkdir -p $HOME/.config/rclone $HOME/rclone/bin
unzip -o rclone.zip 2>&1 | grep '/rclone *$' | cut -d: -f2 | tr -d ' ' | sed -e "s|^|$HOME/|g" | xargs -I {} ln -fns {} $HOME/rclone/bin/rclone
export PATH="$HOME/aws-cli/bin:$HOME/rclone/bin:$PATH"
aws configure set aws_access_key_id $access_key_id
aws configure set aws_secret_access_key $secret_access_key
aws configure set default.region $region
account=`aws sts get-caller-identity | grep '"Account"' | cut -d: -f2 | sed -e 's|[", ]||g'`
echo "account=${account}
region_main_sub=${region_main_sub}
rclone_remote_bucket_main_sub=${rclone_remote_bucket_main_sub}
center_id=${center_id}" > $HOME/.config/rclone/my_remote_bucket.txt
cd $LAMBDA_TASK_ROOT
for rclone_remote_bucket in `echo "${rclone_remote_bucket_main_sub}" | tr ';' '\n'`; do
  rclone --config rclone.conf mkdir ${rclone_remote_bucket}
  bucket=`echo ${rclone_remote_bucket} | cut -d: -f2`
  aws s3api put-bucket-lifecycle-configuration --bucket ${bucket} --lifecycle-configuration '{"Rules": [{"Expiration": {"Days": 1}, "ID": "'${bucket}'", "Filter": {}, "Status": "Enabled", "AbortIncompleteMultipartUpload": {"DaysAfterInitiation": 1}}]}'
done

# Handler format: <script_name>.<bash_function_name>
#
# The script file <script_name>.sh  must be located at the root of your
# function's deployment package, alongside this bootstrap executable.

source $(dirname "$0")/"$(echo $_HANDLER | cut -d. -f1).sh"

while true
do
    # Request the next event from the Lambda runtime
    HEADERS="$(mktemp)"
    EVENT_DATA=$(curl -v -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
    INVOCATION_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

    # Execute the handler function from the script
    RESPONSE=$($(echo "$_HANDLER" | cut -d. -f2) "$EVENT_DATA")

    # Send the response to Lambda runtime
    curl -v -sS -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$INVOCATION_ID/response" -d "$RESPONSE"
done
