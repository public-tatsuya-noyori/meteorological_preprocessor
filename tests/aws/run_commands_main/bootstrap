#!/bin/sh
set -euo pipefail

export HOME="/tmp"
export PATH="$HOME/aws-cli/bin:$PATH"

ACCESS_KEY_ID='***access_key***'
SECRET_ACCESS_KEY='***secret_key***'
REGION='***region***'

cd $HOME
if test ! -e $HOME/aws-cli/bin/aws; then
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    ./aws/install -i /tmp/aws-cli -b /tmp/aws-cli/bin
    aws configure set aws_access_key_id $ACCESS_KEY_ID
    aws configure set aws_secret_access_key $SECRET_ACCESS_KEY
    aws configure set default.region $REGION
fi

# Handler format: <script_name>.<bash_function_name>
#
# The script file <script_name>.sh  must be located at the root of your
# function's deployment package, alongside this bootstrap executable.
source $LAMBDA_TASK_ROOT/"$(echo $_HANDLER | cut -d. -f1).sh"

while true
do
    # Request the next event from the Lambda runtime
    HEADERS="$(mktemp)"
    EVENT_DATA=$(curl -v -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
    INVOCATION_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

    # Execute the handler function from the script
    RESPONSE=$($(echo "$_HANDLER" | cut -d. -f2) "$EVENT_DATA")

    # Send the response to Lambda runtime
    curl -v -sS -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$INVOCATION_ID/response" -d "$RESPONSE"
done
